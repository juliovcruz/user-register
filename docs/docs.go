// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users": {
            "get": {
                "description": "Lista todos os usuários com limite e deslocamento utilizar header \"Authorization\": \"Bearer {token}\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Lista usuários",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limite de usuários Padrão: 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Deslocamento - Padrão: 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um usuário com nome, e-mail e senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Cria um novo usuário",
                "parameters": [
                    {
                        "description": "Usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/users.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    }
                }
            }
        },
        "/users/forgot_password": {
            "post": {
                "description": "Envia um e-mail para recuperação de senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Inicia recuperação de senha",
                "parameters": [
                    {
                        "description": "Email para recuperação",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.ForgotPassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Faz login com o e-mail e a senha do usuário",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Faz login do usuário",
                "parameters": [
                    {
                        "description": "Fazer login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    }
                }
            }
        },
        "/users/password": {
            "put": {
                "description": "Atualiza a senha do usuário com base no e-mail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Atualiza a senha do usuário",
                "parameters": [
                    {
                        "description": "Atualizar senha",
                        "name": "updatePassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Err"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.Err": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "users.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "users.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "zip_code"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "password"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "User Name"
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6,
                    "example": "password"
                },
                "zip_code": {
                    "type": "string",
                    "example": "74360400"
                }
            }
        },
        "users.ForgotPassword": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "users.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6,
                    "example": "password"
                }
            }
        },
        "users.UpdatePassword": {
            "type": "object",
            "required": [
                "code",
                "email",
                "password"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 123456
                },
                "confirm_password": {
                    "type": "string",
                    "example": "password"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6,
                    "example": "password"
                }
            }
        },
        "users.User": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/users.Address"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "User Register API",
	Description:      "API para registro de usuários",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
